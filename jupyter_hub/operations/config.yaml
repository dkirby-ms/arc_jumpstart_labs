# This file can update the JupyterHub Helm chart's default configuration values.
#
# For reference see the configuration reference and default values, but make
# sure to refer to the Helm chart version of interest to you!
#
# Introduction to YAML:     https://www.youtube.com/watch?v=cdLNKUoMc6c
# Chart config reference:   https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html
# Chart default values:     https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml
# Available chart versions: https://hub.jupyter.org/helm-chart/
#
cull:
  enabled: true
  timeout: 3600
  every: 300

# The resources requested is very important to consider in
# relation to your machine type. If you have a n1-highmem-4 node
# on Google Cloud for example you get 4 cores and 26 GB of
# memory. With the configuration below you would  be able to have
# at most about 50 users per node. This can be reasonable, but it
# may not be, it will depend on your users. Are they mostly
# writing and reading or are they mostly executing code?
singleuser:
  image:
    # You should replace the "latest" tag with a fixed version from:
    # https://hub.docker.com/r/jupyter/datascience-notebook/tags/
    # Inspect the Dockerfile at:
    # https://github.com/jupyter/docker-stacks/tree/HEAD/datascience-notebook/Dockerfile
    name: crjslabs.azurecr.io/labs-cv
    tag: "0.1"
  # `cmd: null` allows the custom CMD of the Jupyter docker-stacks to be used
  # which performs further customization on startup.
  lifecycleHooks:
    postStart:
      exec:
        command:
          [
            "gitpuller",
            "https://github.com/dkirby-ms/arc_jumpstart_labs.git",
            "main",
            "jumpstart_labs",
          ]
  cmd: null
  cpu:
    limit: 4
    guarantee: 0.05
  memory:
    limit: 4G
    guarantee: 512M
  
# enable https with letsencrypt
proxy:
  https:
    enabled: true
    hosts:
      - jslabs.kirbytoso.xyz
    letsencrypt:
      contactEmail: dakir@microsoft.com

# Setup authentication
hub:
  config:
    AzureAdOAuthenticator:
      login_service: Azure AD B2C
      client_id: ${OAUTH_CLIENT_ID}
      client_secret: ${OAUTH_CLIENT_SECRET}
      authorize_url: https://agora9.b2clogin.com/agora9.onmicrosoft.com/B2C_1_signupsignin/oauth2/v2.0/authorize
      token_url: https://agora9.b2clogin.com/agora9.onmicrosoft.com/B2C_1_signupsignin/oauth2/v2.0/token
      scope:
        - openid
        - "6933f58d-ffc4-4495-8dae-178180d3ffad"
      oauth_callback_url: "https://jslabs.kirbytoso.xyz/hub/oauth_callback"
      allow_all: true
    JupyterHub:
      authenticator_class: azuread
  extraEnv:
    OAUTH_CLIENT_ID:
      valueFrom:
        secretKeyRef:
          name: azure-b2c-secret
          key: client_id
    OAUTH_CLIENT_SECRET:
      valueFrom:
        secretKeyRef:
          name: azure-b2c-secret
          key: client_secret
          

          